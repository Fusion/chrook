- epic: test ordering things
  hosts: |
    @#:timeout=500 noop=yes:
    return [{
      name: "uby2",
      driver: "ssh2",
      address: "192.168.1.115",
      user: "chrook",
      pass: "chrook"
    }]
  story:
    - display: "{{hosts}}"

- epic: test raw host list
  hosts:
    - name: uby2
      driver: ssh2
      address: |
        @#:
        return "192.168.1.115"
      user: chrook
      pass: chrook

- epic: test flat host list
  hosts:
    - name: uby2
      driver: ssh2
      address: 192.168.1.115
      user: chrook
      pass: chrook
    - name: uby3
      driver: ssh2
      address: 192.168.1.115
      user: chrook
      pass: chrook

- epic: variables
  bringup:
    - var: var1
      value: |
        @#:timeout=500 noop=yes:
        return [{
          name: "uby6",
          driver: "ssh2",
          address: "192.168.1.115",
          user: "chrook",
          pass: "chrook"
        }, {
          name: "uby7",
          driver: "ssh2",
          address: "192.168.1.115",
          user: "chrook",
          pass: "chrook"
        }]
  hosts: |
    @v:
    var1
  story:
    - display: Executing a few commands
    - cmd: ls -l /
      to: files
    - var: somethingelse
      value: |
        @#:
        // Lifted from http://binnyva.blogspot.com/2005/10/dump-function-javascript-equivalent-of.html
        function mydump(arr,level) {
          var dumped_text = "";
          if(!level) level = 0;

          var level_padding = "";
          for(var j=0;j<level+1;j++) level_padding += "  ";

          if(typeof(arr) == 'object') {
              for(var item in arr) {
                  var value = arr[item];

                  if(typeof(value) == 'object') {
                      dumped_text += level_padding + "'" + item + "' ...\n";
                      dumped_text += mydump(value,level+1);
                  } else {
                      dumped_text += level_padding + "'" + item + "' => \"" + value + "\"\n";
                  }
              }
          } else {
              dumped_text = "===>"+arr+"<===("+typeof(arr)+")";
          }
          return dumped_text;
        }

        env.$.hosts.forEach(function(item) {
          print("\n# Files on Host: " + item.name);
          print(env[item.name].files);
          print("---");
        });
    - package: libmyth-python
      as: super
